syntax = "proto2";
package hw.trezor.messages.zcash;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageZcash";

/**
 * Type of Zcash Orchard Key.
 */
enum ZcashKeychainScope {
    EXTERNAL = 0;  // for extenal operations like receiving funds from other users
    INTERNAL = 1;  // for internal operations like change transfers
}
/**
 * Request: Universal Zcash protocol implementation diagnosis request.
 * @start
 * @next DebugZcashDiagResponse
 */
message DebugZcashDiagRequest {
    optional bytes ins = 1;
    optional bytes data = 2;
}

/**
 * Response: Response to Monero diagnosis protocol.
 * @end
 */
message DebugZcashDiagResponse {
    optional bytes data = 1;
}

//Deprecated
/*enum ZcashNetwork {
    TESTNET = 1;
    MAINNET = 133;
}*/

/**
 * Request: Ask device for Full Viewing Key.
 * @start
 * @next Failure
 * @next ZcashFullViewingKey
 */
message ZcashGetFullViewingKey {
    //optional ZcashNetwork network = 1 [default=MAINNET];
    optional string coin_name = 2 [default = "Zcash"];
    repeated uint32 z_address_n = 3; // z-address ZIP 32 path
}

/**
 * Response: Contains raw Zcash Orchard Full Viewing Key.
 * @end
 */
message ZcashFullViewingKey {
    required bytes fvk = 1;
}

/**
 * Request: Ask device for Incoming Viewing Key.
 * @start
 * @next Failure
 * @next ZcashIncomingViewingKey
 */
message ZcashGetIncomingViewingKey {
    //optional ZcashNetwork network = 1 [default=MAINNET];
    optional ZcashKeychainScope scope = 1 [default = EXTERNAL];
    optional string coin_name = 2 [default = "Zcash"];
    repeated uint32 z_address_n = 3; // z-address ZIP 32 path
}

/**
 * Response: Contains raw Zcash Orchard Incoming Viewing Key.
 * @end
 */
message ZcashIncomingViewingKey {
    required bytes ivk = 1;
}

/**
 * Request: Ask device for Unified Address.
 * @start
 * @next Failure
 * @next ZcashAddress
 */
message ZcashGetAddress {
    optional ZcashKeychainScope scope = 1 [default = EXTERNAL];
    repeated uint32 t_address_n = 2;                      // t-address BIP 32 path (P2PKH)
    repeated uint32 z_address_n = 3;                      // z-address ZIP 32 path (Orchard)
    optional uint64 diversifier_index = 4 [default = 0];  // z-address diversifier index
    optional bool   show_display = 5 [default = false];   // Optionally show on display before sending the result
    //optional ZcashNetwork network = 5 [default=MAINNET];
    optional string coin_name = 6 [default = "Zcash"];
}

/**
 * Response: Contains Zcash diversified payment address derived from device private seed
 * @end
 */
message ZcashAddress {
    optional string address = 1;
}

/**
 * Request:
 * @next TxRequest
 */
message ZcashOrchardInput {
    //required bool internal = 1;
    optional uint32 amount = 2;  // note value . This field is optional because it is included in note serialization.
    required bytes note = 3;
    optional bytes hmac = 4;
}

/**
 * Request:
 * @next TxRequest
 */
message ZcashOrchardOutput {
    optional string address = 3;  // for outgoing transfers
    required uint64 amount = 5;
    optional bytes memo = 6;
    optional bytes hmac = 8;
}
