syntax = "proto2";
package hw.trezor.messages.zcash;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageZcash";

//import "messages-common.proto";
import "messages-bitcoin.proto";

/**
 * Request: Universal Zcash protocol implementation diagnosis request.
 * @start
 * @next DebugZcashDiagResponse
 */
message DebugZcashDiagRequest {
    optional uint64 ins = 1; // TODO: How to access protobuff enum from Rust?
    optional bytes data = 2;
}

/**
 * Response: Response to Monero diagnosis protocol.
 * @end
 */
message DebugZcashDiagResponse {
    optional bytes data = 1;
}

/**
 * Request: Ask device for full viewing key derived from seed and address_n
 * @start
 * @next Failure
 * @next ZcashFullViewingKey
 */
message ZcashGetFullViewingKey {
    optional uint32 account = 1 [default = 0]; // Orchard account index. Default account has index 0.
    optional hw.trezor.messages.bitcoin.GetAddress transparent = 2;
}

/**
 * Response: Contains Zcash unified full viewing key. That is
 * - Orchard full viewing key
 * - (optionally) transparent public key
 * encoded according to ZIP 316.
 * @end
 */
message ZcashFullViewingKey {
    required bytes fvk = 1;
}

/**
 * Request: Ask device for unified public address derived from the seed.
 * @start
 * @next Failure
 * @next ZcashAddress
 */
message ZcashGetAddress {
    optional uint32 account = 1 [default = 0];           // Orchard account index. Default account has index 0.
    optional uint32 network_type = 2 [default = 0];      // mainnet(default) = 0 / testnet = 1 .
    optional uint64 diversifier_index = 3 [default = 0]; // Index of address divesifier. Default address has diversifier_index = 0.                                                
    optional bool show_display = 4 [default = false];    // Optionally show on display before sending the result
    optional hw.trezor.messages.bitcoin.GetAddress transparent = 5;                 // Optionally include Zcash transparent address
}

/**
 * Response: Contains Zcash diversified payment address derived from device private seed
 * @end
 */
message ZcashAddress {
    optional string address = 1;
}